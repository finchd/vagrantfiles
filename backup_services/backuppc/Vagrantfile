Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  
  ####################
  # Snippets to use
  ####################
  
  #NFS folder sharing
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true
  
  ####################
  ####################
  
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  
  #Puppet master
  config.vm.define "backuppcmaster".to_sym do |backuppcmaster_config|
    backuppcmaster_config.vm.box = "ubuntu-13.10-server-amd64"
    backuppcmaster_config.vm.hostname = "backuppcmaster.local"
    backuppcmaster_config.hostmanager.aliases = %w(master puppet master.local puppetboard.backuppcmaster.local)
    backuppcmaster_config.vm.network :private_network, ip: "10.0.1.189"
    #set some machine-specific options	
    backuppcmaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    backuppcmaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    backuppcmaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    backuppcmaster_config.vm.synced_folder "hieradata", "/etc/puppet/environments/production/hieradata", :nfs => true
    #Puppet master provisioning script
    backuppcmaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #A machine running BackupPC
  config.vm.define "backupserver".to_sym do |backupserver_config|
    backupserver_config.vm.box = "ubuntu-13.10-server-amd64"
    backupserver_config.vm.hostname = "backupserver.local"
    backupserver_config.vm.network :private_network, ip: "10.0.1.190"
    #set some machine-specific options	
    backupserver_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #Puppet agent provisioning script
	  backupserver_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #A machine BackupPC will back things up from
  config.vm.define "backupclient1".to_sym do |backupclient1_config|
    backupclient1_config.vm.box = "ubuntu-13.10-server-amd64"
    backupclient1_config.vm.hostname = "backupclient1.local"
    backupclient1_config.vm.network :private_network, ip: "10.0.1.191"
    #set some machine-specific options	
    backupclient1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  backupclient1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #A machine BackupPC will back things up from
  config.vm.define "backupclient2".to_sym do |backupclient2_config|
    backupclient2_config.vm.box = "centos-6.5-amd64"
    backupclient2_config.vm.hostname = "backupclient2.local"
    backupclient2_config.vm.network :private_network, ip: "10.0.1.192"
    #set some machine-specific options	
    backupclient2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    backupclient2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

end
