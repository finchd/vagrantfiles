Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  
  ####################
  # Snippets to use
  ####################
  
  #NFS folder sharing
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true
  
  ####################
  ####################
  
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  
  #Puppet master
  config.vm.define "haproxymaster".to_sym do |master_config|
    master_config.vm.box = "ubuntu-14.04-server-amd64"
    master_config.vm.hostname = "haproxymaster.local"
    master_config.hostmanager.aliases = %w(master puppet master.local puppetboard.haproxymaster.local)
    master_config.vm.network :private_network, ip: "10.0.1.180"
    #set some machine-specific options	
    master_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/modules" #,:nfs => true
    config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests" #,:nfs => true
    config.vm.synced_folder "hieradata", "/etc/puppet/environments/production/hieradata" #,:nfs => true
    #Puppet master provisioning script
    
    master_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #An Ubuntu HAProxy VM that can send traffic to either of the MySQL master VMs
  config.vm.define "haproxy1".to_sym do |haproxy1_config|
    haproxy1_config.vm.box = "ubuntu-14.04-server-amd64"
    haproxy1_config.vm.hostname = "haproxy1.local"
    haproxy1_config.vm.network :private_network, ip: "10.0.1.183"
    #set some machine-specific options	
    haproxy1_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  haproxy1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another Ubuntu web server server
  config.vm.define "webserver1".to_sym do |webserver1_config|
    webserver1_config.vm.box = "ubuntu-14.04-server-amd64"
    webserver1_config.vm.hostname = "webserver1.local"
    webserver1_config.vm.network :private_network, ip: "10.0.1.181"
    #set some machine-specific options	
    webserver1_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  webserver1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another Ubuntu web server server
  config.vm.define "webserver2".to_sym do |webserver2_config|
    webserver2_config.vm.box = "ubuntu-14.04-server-amd64"
    webserver2_config.vm.hostname = "webserver2.local"
    webserver2_config.vm.network :private_network, ip: "10.0.1.182"
    #set some machine-specific options	
    webserver2_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  webserver2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end
end
