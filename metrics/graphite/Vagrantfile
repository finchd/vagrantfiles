Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  
  #puppet master
  config.vm.define "graphitemaster".to_sym do |graphitemaster_config|
    graphitemaster_config.vm.box = "ubuntu-13.10-server-amd64"
    graphitemaster_config.vm.hostname = "graphitemaster.local"
    graphitemaster_config.hostmanager.aliases = %w(puppetboard.graphitemaster.local graphitemaster puppet master graphite.graphitemaster.local)
    graphitemaster_config.hostmanager.enabled = true
    graphitemaster_config.vm.network :private_network, ip: "10.0.1.80"
    #set some machine-specific options	
    graphitemaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "2048"]
    end
    #Set up synced folders for Puppet code:
    graphitemaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    graphitemaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    graphitemaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/hieradata", "/etc/puppet/environments/production/hieradata", :nfs => true
    graphitemaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_master.sh"
  end

  #An Ubuntu Graphite server
  config.vm.define "graphite1".to_sym do |graphite1_config|
    graphite1_config.vm.box = "ubuntu-13.10-server-amd64"
    graphite1_config.vm.hostname = "graphite1.local"
    graphite1_config.hostmanager.aliases = %w(graphite.graphite1.local)
    graphite1_config.hostmanager.enabled = true
    graphite1_config.vm.network :private_network, ip: "10.0.1.78"
    #set some machine-specific options	
    graphite1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    graphite1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh" 
  end

  #A CentOS Graphite server
  config.vm.define "graphite2".to_sym do |graphite2_config|
    graphite2_config.vm.box = "centos-6.5-amd64"
    graphite2_config.vm.hostname = "graphite2.local"
    graphite2_config.hostmanager.aliases = %w(graphite.graphite1.local)
    graphite2_config.hostmanager.enabled = true
    graphite2_config.vm.network :private_network, ip: "10.0.1.79"
    #set some machine-specific options	
    graphite2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    graphite2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #main node server
  config.vm.define "node1".to_sym do |node1_config|
    node1_config.vm.box = "ubuntu-13.10-server-amd64"
    node1_config.vm.hostname = "node1.local"
    node1_config.hostmanager.enabled = true
    node1_config.vm.network :private_network, ip: "10.0.1.81"
    #set some machine-specific options	
    node1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh" 
  end

  #another node server
  config.vm.define "node2".to_sym do |node2_config|
    node2_config.vm.box = "ubuntu-13.10-server-amd64"
    node2_config.vm.hostname = "node2.local"
    node2_config.hostmanager.enabled = true
    node2_config.vm.network :private_network, ip: "10.0.1.82"
    #set some machine-specific options	
    node2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh" 
  end

  #a client machine
  config.vm.define "node3".to_sym do |node3_config|
    node3_config.vm.box = "centos-6.5-amd64"
    node3_config.vm.hostname = "node3.local"
    node3_config.hostmanager.enabled = true
    node3_config.vm.network :private_network, ip: "10.0.1.83"
    #set some machine-specific options	
    node3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node3_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end
  
  #a client machine
  config.vm.define "node4".to_sym do |node4_config|
    node4_config.vm.box = "centos-6.5-amd64"
    node4_config.vm.hostname = "node4.local"
    node4_config.hostmanager.enabled = true
    node4_config.vm.network :private_network, ip: "10.0.1.84"
    #set some machine-specific options	
    node4_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node4_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #another node server
  config.vm.define "node5".to_sym do |node5_config|
    node5_config.vm.box = "ubuntu-13.10-server-amd64"
    node5_config.vm.hostname = "node5.local"
    node5_config.hostmanager.enabled = true
    node5_config.vm.network :private_network, ip: "10.0.1.85"
    #set some machine-specific options	
    node5_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node5_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh" 
  end

  #another node server
  config.vm.define "node6".to_sym do |node6_config|
    node6_config.vm.box = "centos-6.5-amd64"
    node6_config.vm.hostname = "node6.local"
    node6_config.hostmanager.enabled = true
    node6_config.vm.network :private_network, ip: "10.0.1.86"
    #set some machine-specific options	
    node6_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node6_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

end
