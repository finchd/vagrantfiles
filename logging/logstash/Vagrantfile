Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  #NFS folder sharing
  #config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/modules"
  #config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests"
  #config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata"

  ####################
  ####################

  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  #incorporate offline box's IPs into the /etc/hosts of boxes that are up/being brought up
  config.hostmanager.include_offline = true

  #Logstash Puppet master
  config.vm.define "logstashmaster".to_sym do |logstashmaster_config|
    logstashmaster_config.vm.box = "ubuntu-14.04-server-amd64"
    logstashmaster_config.vm.hostname = "logstashmaster.local"
    logstashmaster_config.hostmanager.enabled = true
    logstashmaster_config.hostmanager.aliases = %w(logstashmaster.local logstashmaster puppet puppet.local puppetboard.logstashmaster.local puppetexplorer.logstashmaster.local)
    logstashmaster_config.vm.network :private_network, ip: "10.0.1.140"
    #NFS folder sharing for Puppet modules and manifests
    logstashmaster_config.vm.synced_folder "production/", "/etc/puppet/environments/production", :nfs => true
    logstashmaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    #logstashmaster_config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata", :nfs => true
    logstashmaster_config.vm.synced_folder "files/", "/etc/puppet/files", :nfs => true
    #set some machine-specific options	
    logstashmaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    logstashmaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #A Logstash server
  config.vm.define "logstash".to_sym do |logstash_config|
    logstash_config.vm.box = "ubuntu-14.04-server-amd64"
    logstash_config.vm.hostname = "logstash.local"
    logstash_config.hostmanager.aliases = %w(dashboard.logstash.local)
    logstash_config.hostmanager.enabled = true
    logstash_config.vm.network :private_network, ip: "10.0.1.146"
    #set some machine-specific options	
    logstash_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    logstash_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end


  #A web server for Kibana 3 and Kibana 4
  config.vm.define "kibana".to_sym do |kibana_config|
    kibana_config.vm.box = "ubuntu-14.04-server-amd64"
    kibana_config.vm.hostname = "kibana.local"
    kibana_config.hostmanager.aliases = %w(kibana3.kibana.local kibana4.kibana.local)
    kibana_config.hostmanager.enabled = true
    kibana_config.vm.network :private_network, ip: "10.0.1.145"
    #set some machine-specific options	
    kibana_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    kibana_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #An Elasticsearch node
  config.vm.define "elasticsearch1".to_sym do |elasticsearch1_config|
    elasticsearch1_config.vm.box = "ubuntu-14.04-server-amd64"
    elasticsearch1_config.vm.hostname = "elasticsearch1.local"
    elasticsearch1_config.hostmanager.enabled = true
    elasticsearch1_config.vm.network :private_network, ip: "10.0.1.141"
    #set some machine-specific options	
    elasticsearch1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    elasticsearch1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #An Elasticsearch node
  config.vm.define "elasticsearch2".to_sym do |elasticsearch2_config|
    elasticsearch2_config.vm.box = "ubuntu-14.04-server-amd64"
    elasticsearch2_config.vm.hostname = "elasticsearch2.local"
    elasticsearch2_config.hostmanager.enabled = true
    elasticsearch2_config.vm.network :private_network, ip: "10.0.1.142"
    #set some machine-specific options	
    elasticsearch2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    elasticsearch2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #ElasticSearch node
  config.vm.define "elasticsearch3".to_sym do |elasticsearch3_config|
    elasticsearch3_config.vm.box = "ubuntu-14.04-server-amd64"
    elasticsearch3_config.vm.hostname = "elasticsearch3.local"
    elasticsearch3_config.hostmanager.enabled = true
    elasticsearch3_config.vm.network :private_network, ip: "10.0.1.143"
    #set some machine-specific options	
    elasticsearch3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    elasticsearch3_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end
  
  #An rsyslog client to generate log data:
  config.vm.define "rsyslog1".to_sym do |rsyslog1_config|
    rsyslog1_config.vm.box = "ubuntu-14.04-server-amd64"
    rsyslog1_config.vm.hostname = "rsyslog1.local"
    rsyslog1_config.hostmanager.aliases = %w(rsyslog1.local)
    rsyslog1_config.hostmanager.enabled = true
    rsyslog1_config.vm.network :private_network, ip: "10.0.1.151"
    #set some machine-specific options	
    rsyslog1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "128"]
    end
    rsyslog1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another rsyslog client to generate log data:
  config.vm.define "rsyslog2".to_sym do |rsyslog2_config|
    rsyslog2_config.vm.box = "ubuntu-14.04-server-amd64"
    rsyslog2_config.vm.hostname = "rsyslog2.local"
    rsyslog2_config.hostmanager.aliases = %w(rsyslog2.local)
    rsyslog2_config.hostmanager.enabled = true
    rsyslog2_config.vm.network :private_network, ip: "10.0.1.152"
    #set some machine-specific options	
    rsyslog2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "128"]
    end
  rsyslog2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another rsyslog client to generate log data; this one is running CentOS 7 so we can see
  #how systemd and journald can be used with Logstash:
  config.vm.define "rsyslog3".to_sym do |rsyslog3_config|
    rsyslog3_config.vm.box = "centos-7.0-amd64"
    rsyslog3_config.vm.hostname = "rsyslog3.local"
    rsyslog3_config.hostmanager.aliases = %w(rsyslog3.local)
    rsyslog3_config.hostmanager.enabled = true
    rsyslog3_config.vm.network :private_network, ip: "10.0.1.153"
    #set some machine-specific options	
    rsyslog3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "128"]
    end
  rsyslog3_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet_agent.sh"
  end

  #A VM running Riemann, InfluxDB and Grafana for getting metrics about the Logstash environment;
  #It's also a place where Logstash can send Graphite metrics:
  config.vm.define "logstashmetrics".to_sym do |logstashmetrics_config|
    logstashmetrics_config.vm.box = "ubuntu-14.04-server-amd64"
    logstashmetrics_config.vm.hostname = "logstashmetrics.local"
    logstashmetrics_config.hostmanager.aliases = %w(grafana.logstashmetrics.local )
    logstashmetrics_config.hostmanager.enabled = true
    logstashmetrics_config.vm.network :private_network, ip: "10.0.1.147"
    #set some machine-specific options	
    logstashmetrics_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    logstashmetrics_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

end
