Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  #incorporate offline box's IPs into the /etc/hosts of boxes that are up/being brought up
  config.hostmanager.include_offline = true

  #Ubuntu Puppet master
  config.vm.define "consulmaster".to_sym do |consulmaster_config|
    consulmaster_config.vm.box = "ubuntu-14.04-server-amd64"
    consulmaster_config.vm.hostname = "consulmaster.local"
    consulmaster_config.hostmanager.enabled = true
    consulmaster_config.hostmanager.aliases = %w(consulmaster consulmaster.local puppet puppetboard.consulmaster.local)
    consulmaster_config.vm.network :private_network, ip: "10.0.1.150"
    #set some machine-specific options	
    consulmaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    consulmaster_config.vm.synced_folder "production/", "/etc/puppet/environments/production", :nfs => true
    consulmaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    #consulmaster_config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata", :nfs => true
    consulmaster_config.vm.synced_folder "files/", "/etc/puppet/files", :nfs => true
    #Puppet master provisioning script
    consulmaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulserver1".to_sym do |consulserver1_config|
    consulserver1_config.vm.box = "ubuntu-14.04-server-amd64"
    consulserver1_config.vm.hostname = "consulserver1.local"
    consulserver1_config.hostmanager.enabled = true
    consulserver1_config.hostmanager.aliases = %w(consulserver1 consulserver1.local)
    consulserver1_config.vm.network :private_network, ip: "10.0.1.151"
    #set some machine-specific options	
    consulserver1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulserver1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulserver2".to_sym do |consulserver2_config|
    consulserver2_config.vm.box = "ubuntu-14.04-server-amd64"
    consulserver2_config.vm.hostname = "consulserver2.local"
    consulserver2_config.hostmanager.enabled = true
    consulserver2_config.hostmanager.aliases = %w(consulserver2 consulserver2.local)
    consulserver2_config.vm.network :private_network, ip: "10.0.1.152"
    #set some machine-specific options	
    consulserver2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulserver2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulserver3".to_sym do |consulserver3_config|
    consulserver3_config.vm.box = "ubuntu-14.04-server-amd64"
    consulserver3_config.vm.hostname = "consulserver3.local"
    consulserver3_config.hostmanager.enabled = true
    consulserver3_config.hostmanager.aliases = %w(consulserver3 consulserver3.local)
    consulserver3_config.vm.network :private_network, ip: "10.0.1.153"
    #set some machine-specific options	
    consulserver3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulserver3_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulagent1".to_sym do |consulagent1_config|
    consulagent1_config.vm.box = "ubuntu-14.04-server-amd64"
    consulagent1_config.vm.hostname = "consulagent1.local"
    consulagent1_config.hostmanager.enabled = true
    consulagent1_config.hostmanager.aliases = %w(consulagent1 consulagent1.local)
    consulagent1_config.vm.network :private_network, ip: "10.0.1.154"
    #set some machine-specific options	
    consulagent1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulagent1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulagent2".to_sym do |consulagent2_config|
    consulagent2_config.vm.box = "ubuntu-14.04-server-amd64"
    consulagent2_config.vm.hostname = "consulagent2.local"
    consulagent2_config.hostmanager.enabled = true
    consulagent2_config.hostmanager.aliases = %w(consulagent2 consulagent2.local)
    consulagent2_config.vm.network :private_network, ip: "10.0.1.155"
    #set some machine-specific options	
    consulagent2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulagent2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consulagent3".to_sym do |consulagent3_config|
    consulagent3_config.vm.box = "ubuntu-14.04-server-amd64"
    consulagent3_config.vm.hostname = "consulagent3.local"
    consulagent3_config.hostmanager.enabled = true
    consulagent3_config.hostmanager.aliases = %w(consulagent3 consulagent3.local)
    consulagent3_config.vm.network :private_network, ip: "10.0.1.156"
    #set some machine-specific options	
    consulagent3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
    end
    consulagent3_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consullogging".to_sym do |consullogging_config|
    consullogging_config.vm.box = "ubuntu-14.04-server-amd64"
    consullogging_config.vm.hostname = "consullogging.local"
    consullogging_config.hostmanager.enabled = true
    consullogging_config.hostmanager.aliases = %w(consullogging consullogging.local kibana.consullogging.local)
    consullogging_config.vm.network :private_network, ip: "10.0.1.157"
    #set some machine-specific options	
    consullogging_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    consullogging_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

end
