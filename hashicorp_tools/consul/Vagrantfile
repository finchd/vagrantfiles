Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  #incorporate offline box's IPs into the /etc/hosts of boxes that are up/being brought up
  config.hostmanager.include_offline = true

  #Ubuntu Puppet master
  config.vm.define "consulmaster".to_sym do |consulmaster_config|
    consulmaster_config.vm.box = "ubuntu-14.04-server-amd64"
    consulmaster_config.vm.hostname = "consulmaster.local"
    consulmaster_config.hostmanager.enabled = true
    consulmaster_config.hostmanager.aliases = %w(consulmaster consulmaster.local puppet puppetboard.consulmaster.local)
    consulmaster_config.vm.network :private_network, ip: "10.0.1.150"
    #set some machine-specific options	
    consulmaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    consulmaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    consulmaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    consulmaster_config.vm.synced_folder "hieradata", "/etc/puppet/environments/production/hieradata", :nfs => true
    consulmaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul1".to_sym do |consul1_config|
    consul1_config.vm.box = "ubuntu-14.04-server-amd64"
    consul1_config.vm.hostname = "consul1.local"
    consul1_config.hostmanager.enabled = true
    consul1_config.hostmanager.aliases = %w(consul1 consul1.local)
    consul1_config.vm.network :private_network, ip: "10.0.1.151"
    #set some machine-specific options	
    consul1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul2".to_sym do |consul2_config|
    consul2_config.vm.box = "ubuntu-14.04-server-amd64"
    consul2_config.vm.hostname = "consul2.local"
    consul2_config.hostmanager.enabled = true
    consul2_config.hostmanager.aliases = %w(consul2 consul2.local)
    consul2_config.vm.network :private_network, ip: "10.0.1.152"
    #set some machine-specific options	
    consul2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul3".to_sym do |consul3_config|
    consul3_config.vm.box = "ubuntu-14.04-server-amd64"
    consul3_config.vm.hostname = "consul3.local"
    consul3_config.hostmanager.enabled = true
    consul3_config.hostmanager.aliases = %w(consul3 consul3.local)
    consul3_config.vm.network :private_network, ip: "10.0.1.153"
    #set some machine-specific options	
    consul3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul3_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul4".to_sym do |consul4_config|
    consul4_config.vm.box = "ubuntu-14.04-server-amd64"
    consul4_config.vm.hostname = "consul4.local"
    consul4_config.hostmanager.enabled = true
    consul4_config.hostmanager.aliases = %w(consul4 consul4.local)
    consul4_config.vm.network :private_network, ip: "10.0.1.154"
    #set some machine-specific options	
    consul4_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul4_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul5".to_sym do |consul5_config|
    consul5_config.vm.box = "ubuntu-14.04-server-amd64"
    consul5_config.vm.hostname = "consul5.local"
    consul5_config.hostmanager.enabled = true
    consul5_config.hostmanager.aliases = %w(consul5 consul5.local)
    consul5_config.vm.network :private_network, ip: "10.0.1.155"
    #set some machine-specific options	
    consul5_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul5_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Ubuntu Consul agent VM
  config.vm.define "consul6".to_sym do |consul6_config|
    consul6_config.vm.box = "ubuntu-14.04-server-amd64"
    consul6_config.vm.hostname = "consul6.local"
    consul6_config.hostmanager.enabled = true
    consul6_config.hostmanager.aliases = %w(consul6 consul6.local)
    consul6_config.vm.network :private_network, ip: "10.0.1.156"
    #set some machine-specific options	
    consul6_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    consul6_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end
end
