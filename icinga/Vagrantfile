Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  
  ####################
  # Snippets to use
  ####################
  
  #NFS folder sharing for Puppet modules and manifests
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true
  
  ####################
  ####################
  config.vm.box = "centos-6.4-amd64"
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  
#Puppet master and PuppetDB server
config.vm.define "master".to_sym do |master_config|
	master_config.vm.box = "ubuntu-13.04-server-amd64"
	master_config.vm.hostname = "master.local"
	master_config.hostmanager.enabled = true
	master_config.hostmanager.aliases = %w(master puppet)
	master_config.vm.network :private_network, ip: "10.0.1.79"
	#set some machine-specific options	
	master_config.vm.provider "virtualbox" do |v|
       #change the amount of RAM 
        v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/modules", :nfs => true
    config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/manifests", "/etc/puppet/manifests", :nfs => true
end  
  
 #Icinga server
config.vm.define "icinga".to_sym do |icinga_config|
	icinga_config.vm.box = "centos-6.4-amd64"
	icinga_config.vm.hostname = "icinga.local"
	icinga_config.hostmanager.enabled = true
	icinga_config.hostmanager.aliases = %w(icinga)
	icinga_config.vm.network :private_network, ip: "10.0.1.80"
	#set some machine-specific options	
	icinga_config.vm.provider "virtualbox" do |v|
       #change the amount of RAM 
        v.customize ["modifyvm", :id, "--memory", "1024"]
    end
end

#an icinga client
config.vm.define "client1".to_sym do |client1_config|
	client1_config.vm.box = "centos-6.4-amd64"
	client1_config.vm.hostname = "client1.local"
	client1_config.hostmanager.enabled = true
	client1_config.vm.network :private_network, ip: "10.0.1.81"
	#set some machine-specific options	
	client1_config.vm.provider "virtualbox" do |v|
       #change the amount of RAM 
        v.customize ["modifyvm", :id, "--memory", "512"]
	end
end

 #an icinga client
config.vm.define "client2".to_sym do |client2_config|
	client2_config.vm.box = "centos-6.4-amd64"
	client2_config.vm.hostname = "client2.local"
	client2_config.hostmanager.enabled = true
	client2_config.vm.network :private_network, ip: "10.0.1.82"
	#set some machine-specific options	
	client2_config.vm.provider "virtualbox" do |v|
    	#change the amount of RAM 
    	v.customize ["modifyvm", :id, "--memory", "512"]
    end
end
  
#a mail server for Icinga to send notifications to
config.vm.define "mail".to_sym do |mail_config|
	mail_config.vm.box = "centos-6.4-amd64"
	mail_config.vm.hostname = "mail.local"
	mail_config.hostmanager.enabled = true
	mail_config.vm.network :private_network, ip: "10.0.1.84"
	#set some machine-specific options	
	mail_config.vm.provider "virtualbox" do |v|
       #change the amount of RAM 
        v.customize ["modifyvm", :id, "--memory", "512"]
    end
  end
end


$rhel_centos_puppet_master_script = <<SCRIPT
#! /bin/bash
echo Checking to see if the Puppet Labs RHEL/CentOS repo needs to be added...

if [ ! -f /home/vagrant/repos_added.txt ];
then    
    echo Adding repo...
	sudo rpm -ivh http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-7.noarch.rpm
	echo DONE adding repo!
    echo Updating package lists with new repo...
	sudo yum check-update
	#Touch the repos_added file to skip this block the next time around
	touch /home/vagrant/repos_added.txt

else
	echo Skipping repo addition...
fi

if [ ! -f /home/vagrant/puppet_master_installed.txt ];
then
	echo Installing the Puppet master...
	sudo yum install puppet-server -y
	echo DONE installing the Puppet master packages!
	
	sudo chkconfig --levels 2345 puppetmaster on
	echo DONE adding the Puppet master daemon to start up on system boot!
	
	echo Starting the Puppet master daemon... 
	sudo /etc/init.d/puppetmaster start
	echo DONE starting the daemon!
	
	echo Disabling IP tables...
	sudo service iptables stop
	echo DONE disabling iptables!
	
	#Touch the puppet_installed.txt file to skip this block the next time around
	touch /home/vagrant/puppet_master_installed.txt
else
	echo Skipping Puppet master package installation...
fi

echo cating sample puppet.conf into puppet.conf file...
sudo cat <<EOF > /etc/puppet/puppet.conf
[main]
    # The Puppet log directory.
    # The default value is '$vardir/log'.
    logdir = /var/log/puppet

    # Where Puppet PID files are kept.
    # The default value is '$vardir/run'.
    rundir = /var/run/puppet

    # Where SSL certificates are kept.
    # The default value is '$confdir/ssl'.
    ssldir = /var/lib/puppet/ssl/
    dns_alt_names=puppet, master

[agent]
    # The file in which puppetd stores a list of the classes
    # associated with the retrieved configuratiion.  Can be loaded in
    # the separate ``puppet`` executable using the ``--loadclasses``
    # option.
    # The default value is '$confdir/classes.txt'.
    classfile = $vardir/classes.txt

    # Where puppetd caches the local configuration.  An
    # extension indicating the cache format is added automatically.
    # The default value is '$confdir/localconfig'.
    localconfig = $vardir/localconfig

EOF

sudo puppet cert clean master
sudo puppet cert generate master --dns_alt_names=puppet
sudo /etc/init.d/puppetmaster restart

SCRIPT

$rhel_centos_puppet_agent_script = <<SCRIPT
#! /bin/bash
echo Checking to see if the Puppet Labs RHEL/CentOS repo needs to be added...

if [ ! -f /home/vagrant/repos_added.txt ];
then    
    echo Adding repo...
	sudo rpm -ivh http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-7.noarch.rpm
	echo DONE adding repo!
    echo Updating package lists with new repo...
	sudo yum check-update
	#Touch the repos_added file to skip this block the next time around
	touch /home/vagrant/repos_added.txt

else
	echo Skipping repo addition...
fi

echo Checking to see if the Puppet agent package needs to be installed...

if [ ! -f /home/vagrant/puppet_agent_installed.txt ];
then
	echo Installing the Puppet agent...
	sudo yum install puppet -y
	echo DONE installing the Puppet agent!
		
	sudo chkconfig --levels 2345 puppet on
	echo DONE adding the Puppet agent daemon to start up on system boot!
	
	echo Starting the Puppet master daemon... 
	sudo /etc/init.d/puppet start
	echo DONE starting the daemon!
	
	echo Disabling IP tables...
	sudo service iptables stop
	echo DONE disabling iptables!
	
	#Touch the puppet_installed.txt file to skip this block the next time around
	touch /home/vagrant/puppet_agent_installed.txt
	
else
	echo Skipping Puppet agent package installation...
fi

echo cating sample puppet.conf into puppet.conf file...

sudo cat <<EOF > /etc/puppet/puppet.conf
[main]
    # The Puppet log directory.
    # The default value is '$vardir/log'.
    logdir = /var/log/puppet

    # Where Puppet PID files are kept.
    # The default value is '$vardir/run'.
    rundir = /var/run/puppet

    # Where SSL certificates are kept.
    # The default value is '$confdir/ssl'.
    ssldir = /var/lib/puppet/ssl/
    
    server=puppet
    reports=false
    pluginsync=true

[agent]
    # The file in which puppetd stores a list of the classes
    # associated with the retrieved configuratiion.  Can be loaded in
    # the separate ``puppet`` executable using the ``--loadclasses``
    # option.
    # The default value is '$confdir/classes.txt'.
    classfile = $vardir/classes.txt

    # Where puppetd caches the local configuration.  An
    # extension indicating the cache format is added automatically.
    # The default value is '$confdir/localconfig'.
    localconfig = $vardir/localconfig
EOF
SCRIPT

$debian_ubuntu_puppet_master_script = <<SCRIPT
echo I am provisioning...
date > /etc/vagrant_provisioned_at
date > /etc/vagrant_provisioned_at2
wget -N http://apt.puppetlabs.com/puppetlabs-release-quantal.deb
sudo dpkg -i puppetlabs-release-quantal.deb
sudo apt-get update
sudo apt-get -y install puppet
SCRIPT

$debian_ubuntu_puppet_agent_script = <<SCRIPT
#! /bin/bash
echo Checking to see if Puppet Labs Ubuntu repo needs to be added...
if [ ! -f /home/vagrant/repos_added.txt ];
then    
    echo Adding repo...

    echo Updating package lists with new repo...

    echo Installing Puppet...
	touch /home/vagrant/repos_added.txt
fi

cat <<EOF > /home/vagrant/puppet.conf
[main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=$vardir/lib/facter
templatedir=$confdir/templates
server=puppet
reports=false
pluginsync=true
 
[master]
# These are needed when the puppetmaster is run by passenger
# and can safely be removed if webrick is used.
ssl_client_header = SSL_CLIENT_S_DN 
ssl_client_verify_header = SSL_CLIENT_VERIFY
EOF

SCRIPT