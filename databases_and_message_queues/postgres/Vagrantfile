Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  
  ####################
  # Snippets to use
  ####################
  
  #NFS folder sharing
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true
  
  ####################
  ####################
  
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  
  #Puppet master
  config.vm.define "postgresmaster".to_sym do |master_config|
    master_config.vm.box = "ubuntu-14.04-server-amd64"
    master_config.vm.hostname = "postgresmaster.local"
    master_config.hostmanager.aliases = %w(master puppet master.local puppetboard.postgresmaster.local)
    master_config.vm.network :private_network, ip: "10.0.1.180"
    #set some machine-specific options	
    master_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/modules" #,:nfs => true
    config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests" #,:nfs => true
    config.vm.synced_folder "hieradata", "/etc/puppet/environments/production/hieradata" #,:nfs => true
    #Puppet master provisioning script
    
    master_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #An Ubuntu postgres master server
  config.vm.define "postgresserver1".to_sym do |postgresserver1_config|
    postgresserver1_config.vm.box = "ubuntu-14.04-server-amd64"
    postgresserver1_config.vm.hostname = "postgresserver1.local"
    postgresserver1_config.vm.network :private_network, ip: "10.0.1.181"
    #set some machine-specific options	
    postgresserver1_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresserver1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #A CentOS postgres master server
  config.vm.define "postgresserver2".to_sym do |postgresserver2_config|
    postgresserver2_config.vm.box = "centos-6.6-amd64"
    postgresserver2_config.vm.hostname = "postgresserver2.local"
    postgresserver2_config.vm.network :private_network, ip: "10.0.1.182"
    #set some machine-specific options	
    postgresserver2_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresserver2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #An Ubuntu postgres slave server for replication
  config.vm.define "postgresslave1".to_sym do |postgresslave1_config|
    postgresslave1_config.vm.box = "ubuntu-14.04-server-amd64"
    postgresslave1_config.vm.hostname = "postgresslave1.local"
    postgresslave1_config.vm.network :private_network, ip: "10.0.1.183"
    #set some machine-specific options	
    postgresslave1_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresslave1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end
  
  #A CentOS postgres slave server for replication
  config.vm.define "postgresslave2".to_sym do |postgresslave2_config|
    postgresslave2_config.vm.box = "centos-6.6-amd64"
    postgresslave2_config.vm.hostname = "postgresslave2.local"
    postgresslave2_config.vm.network :private_network, ip: "10.0.1.184"
    #set some machine-specific options	
    postgresslave2_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresslave2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #An Ubuntu BIND DNS client
  config.vm.define "postgresclient1".to_sym do |postgresclient1_config|
    postgresclient1_config.vm.box = "ubuntu-14.04-server-amd64"
    postgresclient1_config.vm.hostname = "postgresclient1.local"
    postgresclient1_config.vm.network :private_network, ip: "10.0.1.185"
    #set some machine-specific options	
    postgresclient1_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresclient1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end
  
  #A CentOS BIND DNS client
  config.vm.define "postgresclient2".to_sym do |postgresclient2_config|
    postgresclient2_config.vm.box = "centos-6.6-amd64"
    postgresclient2_config.vm.hostname = "postgresclient2.local"
    postgresclient2_config.vm.network :private_network, ip: " 6"
    #set some machine-specific options	
    postgresclient2_config.vm.provider "virtualbox" do |v|
         #change the amount of RAM 
          v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
	  postgresclient2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

end
