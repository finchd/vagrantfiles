Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.
  
  ####################
  # Snippets to use
  ####################
  
  #NFS folder sharing
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true
  
  ####################
  ####################
  
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  
  #Puppet master
  config.vm.define "kubernetespuppetserver".to_sym do |kubernetespuppetserver_config|
    kubernetespuppetserver_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetespuppetserver_config.vm.network :private_network, ip: "10.0.2.10"
    kubernetespuppetserver_config.vm.hostname = "kubernetespuppetserver.local"
    kubernetespuppetserver_config.hostmanager.aliases = %w(puppet kubernetespuppetserver.local puppetexplorer.kubernetespuppetserver.local puppetboard.kubernetespuppetserver.local)
    #set some machine-specific options
    kubernetespuppetserver_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.vm.network :private_network, ip: "10.0.1.10"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "1024"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    kubernetespuppetserver_config.vm.synced_folder "production/", "/etc/puppetlabs/code/environments/production", :nfs => true
    kubernetespuppetserver_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppetlabs/code/environments/production/modules", :nfs => true
    #kubernetespuppetserver_config.vm.synced_folder "hieradata/", "/etc/puppetlabs/code/environments/production/hieradata", :nfs => true
    #kubernetespuppetserver_config.vm.synced_folder "files/", "/etc/puppet/files", :nfs => true
    #Puppet master provisioning script
    kubernetespuppetserver_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_server.sh"
  end

  #A CentOS 7 Kubernetes server
  config.vm.define "kubernetesserver1".to_sym do |kubernetesserver1_config|
    kubernetesserver1_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesserver1_config.vm.network :private_network, ip: "10.0.2.11"
    kubernetesserver1_config.vm.hostname = "kubernetesserver1.local"
    kubernetesserver1_config.hostmanager.aliases = "kubernetesserver1.local"
    #set some machine-specific options
    kubernetesserver1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.11"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "256"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesserver1_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesserver1_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes server
  config.vm.define "kubernetesserver2".to_sym do |kubernetesserver2_config|
    kubernetesserver2_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesserver2_config.vm.network :private_network, ip: "10.0.2.12"
    kubernetesserver2_config.vm.hostname = "kubernetesserver2.local"
    kubernetesserver2_config.hostmanager.aliases = "kubernetesserver2.local"
    #set some machine-specific options
    kubernetesserver2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.12"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "256"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesserver2_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesserver2_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes server
  config.vm.define "kubernetesserver3".to_sym do |kubernetesserver3_config|
    kubernetesserver3_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesserver3_config.vm.network :private_network, ip: "10.0.2.13"
    kubernetesserver3_config.vm.hostname = "kubernetesserver3.local"
    kubernetesserver3_config.hostmanager.aliases = "kubernetesserver3.local"
    #set some machine-specific options
    kubernetesserver3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.13"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "256"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesserver3_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesserver3_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes client
  config.vm.define "kubernetesclient1".to_sym do |kubernetesclient1_config|
    kubernetesclient1_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesclient1_config.vm.network :private_network, ip: "10.0.2.14"
    kubernetesclient1_config.vm.hostname = "kubernetesclient1.local"
    kubernetesclient1_config.hostmanager.aliases = "kubernetesclient1.local"
    #set some machine-specific options
    kubernetesclient1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.14"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "1024"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesclient1_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesclient1_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes client
  config.vm.define "kubernetesclient2".to_sym do |kubernetesclient2_config|
    kubernetesclient2_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesclient2_config.vm.network :private_network, ip: "10.0.2.15"
    kubernetesclient2_config.vm.hostname = "kubernetesclient2.local"
    kubernetesclient2_config.hostmanager.aliases = "kubernetesclient2.local"
    #set some machine-specific options
    kubernetesclient2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.15"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "1024"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesclient2_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesclient2_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes client
  config.vm.define "kubernetesclient3".to_sym do |kubernetesclient3_config|
    kubernetesclient3_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesclient3_config.vm.network :private_network, ip: "10.0.2.16"
    kubernetesclient3_config.vm.hostname = "kubernetesclient3.local"
    kubernetesclient3_config.hostmanager.aliases = "kubernetesclient3.local"
    #set some machine-specific options
    kubernetesclient3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.16"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "1024"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesclient3_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesclient3_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Docker registry
  config.vm.define "dockerregistry".to_sym do |dockerregistry_config|
    dockerregistry_config.vm.box = "centos-7.1-amd64-vmware"
    dockerregistry_config.vm.network :private_network, ip: "10.0.2.17"
    dockerregistry_config.vm.hostname = "dockerregistry.local"
    dockerregistry_config.hostmanager.aliases = "dockerregistry.local"
    #set some machine-specific options
    dockerregistry_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.17"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "512"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #dockerregistry_config.vm.synced_folder ".", "/vagrant", :nfs => true
    dockerregistry_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 Kubernetes client
  config.vm.define "kubernetesmonitoring".to_sym do |kubernetesmonitoring_config|
    kubernetesmonitoring_config.vm.box = "centos-7.1-amd64-vmware"
    kubernetesmonitoring_config.vm.network :private_network, ip: "10.0.2.18"
    kubernetesmonitoring_config.vm.hostname = "kubernetesmonitoring.local"
    kubernetesmonitoring_config.hostmanager.aliases = "kubernetesmonitoring.local"
    #set some machine-specific options
    kubernetesmonitoring_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.vm.network :private_network, ip: "10.0.1.18"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "1024"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #kubernetesmonitoring_config.vm.synced_folder ".", "/vagrant", :nfs => true
    kubernetesmonitoring_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

  #A CentOS 7 HAproxy gateway machine
  config.vm.define "haproxy1".to_sym do |haproxy1_config|
    haproxy1_config.vm.box = "centos-7.1-amd64-vmware"
    haproxy1_config.vm.network :private_network, ip: "10.0.2.21"
    haproxy1_config.vm.hostname = "haproxy1.local"
    haproxy1_config.hostmanager.aliases = "haproxy1.local"
    #set some machine-specific options
    haproxy1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "256"]
      v.vm.network :private_network, ip: "10.0.1.21"
    end
    config.vm.provider "vmware_fusion" do |v, override|
      v.vmx["memsize"] = "256"
      v.vmx["numvcpus"] = "1"
    end
    #NFS folder sharing for Puppet modules and manifests
    #haproxy1_config.vm.synced_folder ".", "/vagrant", :nfs => true
    haproxy1_config.vm.provision :shell, :path => "../provisioning_scripts/el7_puppet4_agent.sh"
  end

end
