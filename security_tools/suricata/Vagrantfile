Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  #NFS folder sharing for Puppet modules and manifests
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true

  ####################
  ####################

  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true
  #incorporate offline box's IPs into the /etc/hosts of boxes that are up/being brought up
  config.hostmanager.include_offline = true

  #Puppet master and PuppetDB server
  config.vm.define "suricatamaster".to_sym do |suricatamaster_config|
    suricatamaster_config.vm.box = "ubuntu-13.10-server-amd64"
    suricatamaster_config.vm.hostname = "suricatamaster.local"
    suricatamaster_config.hostmanager.enabled = true
    suricatamaster_config.hostmanager.aliases = %w(puppetboard.suricatamaster.local suricatamaster puppet master)
    suricatamaster_config.vm.network :private_network, ip: "10.0.1.78"
    #set some machine-specific options	
    suricatamaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #NFS folder sharing for Puppet modules and manifests
    config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata", :nfs => true
    #Puppet suricatamaster provisioning script
    suricatamaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end  

  #ubuntusuricata server
  config.vm.define "ubuntusuricata".to_sym do |ubuntusuricata_config|
    ubuntusuricata_config.vm.box = "ubuntu-13.10-server-amd64"
    ubuntusuricata_config.vm.hostname = "ubuntusuricata.local"
    ubuntusuricata_config.hostmanager.enabled = true
    ubuntusuricata_config.hostmanager.aliases = %w(ubuntusuricata)
    ubuntusuricata_config.vm.network :private_network, ip: "10.0.1.79"
    #set some machine-specific options	
    ubuntusuricata_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    ubuntusuricata_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #centossuricata server
  config.vm.define "centossuricata".to_sym do |centossuricata_config|
    centossuricata_config.vm.box = "centos-6.5-amd64"
    centossuricata_config.vm.hostname = "centossuricata.local"
    centossuricata_config.hostmanager.enabled = true
    centossuricata_config.hostmanager.aliases = %w(centossuricata)
    centossuricata_config.vm.network :private_network, ip: "10.0.1.80"
    #set some machine-specific options	
    centossuricata_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    centossuricata_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #an icingaserver client
  config.vm.define "sensor1".to_sym do |sensor1_config|
    sensor1_config.vm.box = "ubuntu-13.10-server-amd64"
    sensor1_config.vm.hostname = "sensor1.local"
    sensor1_config.hostmanager.enabled = true
    sensor1_config.vm.network :private_network, ip: "10.0.1.81"
    #set some machine-specific options	
    sensor1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    sensor1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #an icingaserver client
  config.vm.define "sensor2".to_sym do |sensor2_config|
    sensor2_config.vm.box = "centos-6.5-amd64"
    sensor2_config.vm.hostname = "sensor2.local"
    sensor2_config.hostmanager.enabled = true
    sensor2_config.vm.network :private_network, ip: "10.0.1.82"
    sensor2_config.vm.provider "virtualbox" do |v| 	
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    sensor2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #an icingaserver client
  config.vm.define "sensor3".to_sym do |sensor1_config|
    sensor1_config.vm.box = "ubuntu-13.10-server-amd64"
    sensor1_config.vm.hostname = "sensor3.local"
    sensor1_config.hostmanager.enabled = true
    sensor1_config.vm.network :private_network, ip: "10.0.1.83"
    #set some machine-specific options	
    sensor1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    sensor1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #an icingaserver client
  config.vm.define "sensor4".to_sym do |sensor2_config|
    sensor2_config.vm.box = "centos-6.5-amd64"
    sensor2_config.vm.hostname = "sensor4.local"
    sensor2_config.hostmanager.enabled = true
    sensor2_config.vm.network :private_network, ip: "10.0.1.84"
    sensor2_config.vm.provider "virtualbox" do |v| 	
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    #Puppet agent provisioning script
    sensor2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end
end
