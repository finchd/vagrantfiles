Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true

  #Puppet and Ansible master
  config.vm.define "ansiblemaster".to_sym do |ansiblemaster_config|
    ansiblemaster_config.vm.box = "ubuntu-14.04-server-amd64"
    ansiblemaster_config.vm.hostname = "ansiblemaster.local"
    ansiblemaster_config.hostmanager.aliases = %w(puppetboard.ansiblemaster.local ansiblemaster puppet master ansible.ansiblemaster.local)
    ansiblemaster_config.hostmanager.enabled = true
    ansiblemaster_config.vm.network :private_network, ip: "10.0.1.80"
    #set some machine-specific options
    ansiblemaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "2048"]
    end
    #Set up synced folders for Puppet code:
    ansiblemaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    ansiblemaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    ansiblemaster_config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata", :nfs => true
    ansiblemaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end

  #Another Ansible node
  config.vm.define "ansible1".to_sym do |ansible1_config|
    ansible1_config.vm.box = "ubuntu-14.04-server-amd64"
    ansible1_config.vm.hostname = "ansible1.local"
    ansible1_config.hostmanager.enabled = true
    ansible1_config.vm.network :private_network, ip: "10.0.1.81"
    #set some machine-specific options
    ansible1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another Ansible node
  config.vm.define "ansible2".to_sym do |ansible2_config|
    ansible2_config.vm.box = "ubuntu-14.04-server-amd64"
    ansible2_config.vm.hostname = "ansible2.local"
    ansible2_config.hostmanager.enabled = true
    ansible2_config.vm.network :private_network, ip: "10.0.1.82"
    #set some machine-specific options
    ansible2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #Another Ansible node
  config.vm.define "ansible3".to_sym do |ansible3_config|
    ansible3_config.vm.box = "centos-6.6-amd64"
    ansible3_config.vm.hostname = "ansible3.local"
    ansible3_config.hostmanager.enabled = true
    ansible3_config.vm.network :private_network, ip: "10.0.1.83"
    #set some machine-specific options
    ansible3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible3_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #Another Ansible node
  config.vm.define "ansible4".to_sym do |ansible4_config|
    ansible4_config.vm.box = "centos-6.6-amd64"
    ansible4_config.vm.hostname = "ansible4.local"
    ansible4_config.hostmanager.enabled = true
    ansible4_config.vm.network :private_network, ip: "10.0.1.84"
    #set some machine-specific options
    ansible4_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible4_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #Another Ansible node
  config.vm.define "ansible5".to_sym do |ansible5_config|
    ansible5_config.vm.box = "ubuntu-14.04-server-amd64"
    ansible5_config.vm.hostname = "ansible5.local"
    ansible5_config.hostmanager.enabled = true
    ansible5_config.vm.network :private_network, ip: "10.0.1.85"
    #set some machine-specific options
    ansible5_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible5_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_agent.sh"
  end

  #another ansible server
  config.vm.define "ansible6".to_sym do |ansible6_config|
    ansible6_config.vm.box = "centos-6.6-amd64"
    ansible6_config.vm.hostname = "ansible6.local"
    ansible6_config.hostmanager.enabled = true
    ansible6_config.vm.network :private_network, ip: "10.0.1.86"
    #set some machine-specific options
    ansible6_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    ansible6_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

end
