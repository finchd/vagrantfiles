Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  #NFS folder sharing example
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true

  #Ubuntu mco Puppet master
  config.vm.define "mcomaster".to_sym do |mcomaster_config|
    mcomaster_config.vm.box = "ubuntu-13.10-server-amd64"
    mcomaster_config.vm.hostname = "mcomaster.local"
    mcomaster_config.hostmanager.enabled = true
    mcomaster_config.hostmanager.aliases = %w(puppetboard.mcomaster.local mcomaster puppet master)
    mcomaster_config.vm.network :private_network, ip: "10.0.1.48"
    #set some machine-specific options	
    mcomaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #Set up synced folders for Puppet code:
    mcomaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    mcomaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    mcomaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/hieradata", "/etc/puppet/environments/production/hieradata", :nfs => true
    mcomaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_master.sh"
  end

  #CentOS mco machine
  config.vm.define "mco1".to_sym do |mco1_config|
    mco1_config.vm.box = "ubuntu-13.10-server-amd64"
    mco1_config.vm.hostname = "mco1.local"
    mco1_config.hostmanager.enabled = true
    mco1_config.vm.network :private_network, ip: "10.0.1.51"
    #set some machine-specific options	
    mco1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    mco1_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh"
  end

  #CentOS mco machine
  config.vm.define "mco2".to_sym do |mco2_config|
    mco2_config.vm.box = "ubuntu-13.10-server-amd64"
    mco2_config.vm.hostname = "mco2.local"
    mco2_config.hostmanager.enabled = true
    mco2_config.vm.network :private_network, ip: "10.0.1.52"
    #set some machine-specific options	
    mco2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    mco2_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_saucy_puppet_agent.sh"
  end

  #CentOS mco machine
  config.vm.define "mco3".to_sym do |mco3_config|
    mco3_config.vm.box = "centos-6.5-amd64"
    mco3_config.vm.hostname = "mco3.local"
    mco3_config.hostmanager.enabled = true
    mco3_config.vm.network :private_network, ip: "10.0.1.53"
    #set some machine-specific options	
    mco3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    mco3_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS mco machine
  config.vm.define "mco4".to_sym do |mco4_config|
    mco4_config.vm.box = "centos-6.5-amd64"
    mco4_config.vm.hostname = "mco4.local"
    mco4_config.hostmanager.enabled = true
    mco4_config.vm.network :private_network, ip: "10.0.1.54"
    #set some machine-specific options	
    mco4_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    mco4_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end
end
