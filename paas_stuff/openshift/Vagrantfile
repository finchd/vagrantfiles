Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  ####################
  # Snippets to use
  ####################

  #NFS folder sharing example
  #config.vm.synced_folder "modules", "/etc/puppet/modules", :nfs => true

  ####################
  ####################
  #vagrant-hostmanager plugin options
  config.hostmanager.enabled = true
  config.hostmanager.ignore_private_ip = false
  #update the /etc/hosts of the host OS
  config.hostmanager.manage_host = true

  #Ubuntu openshift master server and Puppet master
  config.vm.define "openshiftmaster".to_sym do |openshiftmaster_config|
    openshiftmaster_config.vm.box = "ubuntu-13.10-server-amd64"
    openshiftmaster_config.vm.hostname = "openshiftmaster.local"
    openshiftmaster_config.hostmanager.enabled = true
    openshiftmaster_config.hostmanager.aliases = %w(puppetboard.openshiftmaster.local openshiftmaster puppet master)
    openshiftmaster_config.vm.network :private_network, ip: "10.0.1.48"
    #set some machine-specific options	
    openshiftmaster_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    #Set up synced folders for Puppet code:
    openshiftmaster_config.vm.synced_folder "/Users/nick/Documents/git/puppet-code/modules", "/etc/puppet/environments/production/modules", :nfs => true
    openshiftmaster_config.vm.synced_folder "manifests/", "/etc/puppet/environments/production/manifests", :nfs => true
    openshiftmaster_config.vm.synced_folder "hieradata/", "/etc/puppet/environments/production/hieradata", :nfs => true
    openshiftmaster_config.vm.provision :shell, :path => "../provisioning_scripts/ubuntu_puppet_master.sh"
  end
  
  #Ubuntu openshift master server
  config.vm.define "broker".to_sym do |broker_config|
    broker_config.vm.box = "centos-6.5-amd64"
    broker_config.vm.hostname = "broker.local"
    broker_config.hostmanager.aliases = %w(console.broker.local)
    broker_config.hostmanager.enabled = true
    broker_config.vm.network :private_network, ip: "10.0.1.49"
    #set some machine-specific options	
    broker_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    broker_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end
  
  #CentOS OpenShift ActiveMQ server
  config.vm.define "activemq".to_sym do |activemq_config|
    activemq_config.vm.box = "centos-6.5-amd64"
    activemq_config.vm.hostname = "activemq.local"
    activemq_config.hostmanager.enabled = true
    activemq_config.vm.network :private_network, ip: "10.0.1.50"
    #set some machine-specific options	
    activemq_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    activemq_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS OpenShift MongoDB server
  config.vm.define "mongodb".to_sym do |mongodb_config|
    mongodb_config.vm.box = "centos-6.5-amd64"
    mongodb_config.vm.hostname = "mongodb.local"
    mongodb_config.hostmanager.enabled = true
    mongodb_config.vm.network :private_network, ip: "10.0.1.47"
    #set some machine-specific options	
    mongodb_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "1024"]
    end
    mongodb_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS OpenShift node
  config.vm.define "node1".to_sym do |node1_config|
    node1_config.vm.box = "centos-6.5-amd64"
    node1_config.vm.hostname = "node1.local"
    node1_config.hostmanager.enabled = true
    node1_config.vm.network :private_network, ip: "10.0.1.51"
    #set some machine-specific options	
    node1_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node1_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS OpenShift node
  config.vm.define "node2".to_sym do |node2_config|
    node2_config.vm.box = "centos-6.5-amd64"
    node2_config.vm.hostname = "node2.local"
    node2_config.hostmanager.enabled = true
    node2_config.vm.network :private_network, ip: "10.0.1.52"
    #set some machine-specific options	
    node2_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node2_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS OpenShift node
  config.vm.define "node3".to_sym do |node3_config|
    node3_config.vm.box = "centos-6.5-amd64"
    node3_config.vm.hostname = "node3.local"
    node3_config.hostmanager.enabled = true
    node3_config.vm.network :private_network, ip: "10.0.1.53"
    #set some machine-specific options	
    node3_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node3_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end

  #CentOS OpenShift node
  config.vm.define "node4".to_sym do |node4_config|
    node4_config.vm.box = "centos-6.5-amd64"
    node4_config.vm.hostname = "node4.local"
    node4_config.hostmanager.enabled = true
    node4_config.vm.network :private_network, ip: "10.0.1.54"
    #set some machine-specific options	
    node4_config.vm.provider "virtualbox" do |v|
      #change the amount of RAM 
      v.customize ["modifyvm", :id, "--memory", "512"]
    end
    node4_config.vm.provision :shell, :path => "../provisioning_scripts/el6_puppet_agent.sh"
  end
end
